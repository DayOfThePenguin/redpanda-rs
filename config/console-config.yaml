kafka:
  # Brokers is a list of bootstrap servers with 
  # port (for example "localhost:9092").
  brokers: ["redpanda-0:29092"]

  schemaRegistry:
    enabled: true
    # Url with scheme is required, e.g. ["http://localhost:8081"]
    urls: ["http://redpanda-0:8081"]
  protobuf:
    enabled: true
    mappings:
      - topicName: simple
        valueProtoType: simple.SimpleMeasurement
      - topicName: simple-inference
        valueProtoType: simple.SimpleInferenceResult
    # These ^ protos won't show up in the schema registry, but they will apply correctly
    # to the messages in the topic. Per Slack Thread in RedPanda/console w/ lead Console dev,
    # as of 22.2, schema registry and manual mappings are separate. For schema registry to work,
    # you need a client (none of the Rust clients can) that is schema registry-aware so it knows
    # how to pack proto metadata into the record
    #
    # SchemaRegistry does not require any mappings to be specified. 
    # The schema registry client that is configured in the 
    # kafka config block will be reused.
    # This will only work if you have a 
    # schemaRegistry:
    #   enabled: true
    #   refreshInterval: 1m
    # FileSystem can be configured if you want Console to 
    # search the local file system for the .proto files
    fileSystem:
      enabled: true
      paths: ["/docker-volume/proto"]
      refreshInterval: 1m

# connect:
#   enabled: false
#   # An empty array for clusters is the default, but you have to 
#   # specify at least one cluster, as soon as you enable Kafka connect. 
#   # Otherwise you'll not be able to start Console.
#   clusters: []
#     - name: xy
#       url: http://my-cluster:8083
#       tls:
#         # Trusted certificates are still allowed if TLS is not enabled.
#         enabled: false
#         # caFilepath:
#         # certFilepath:
#         # keyFilepath:
#         # insecureSkipTlsVerify: false
#       username:
#       password:
#       token:
#   connectTimeout: 15s # used to test cluster connectivity
#   readTimeout: 60s    # overall REST timeout
#   requestTimeout: 6s  # timeout for REST requests

# console:
#   # Config to use for embedded topic documentation
#   topicDocumentation:
#     enabled: false
#     # Configure the git repository, which contains the topic documentation. 
#     # Console clones the git repository and periodically pulls for new 
#     # changes so that it can render the markdown files within the topic view.
#     git:
#       enabled: false
#       repository:
#         url:
#         branch: (defaults to primary/default branch)
#         baseDirectory: .
#       # How often Console shall pull the repository to look for new files.
#       # Set 0 to disable periodic pulls.
#       refreshInterval: 1m
#       # If you want to use GitHub's personal access tokens use `token` 
#       # as username and pass the token as password.
#       basicAuth:
#         enabled: true
#         username: token
#         password:
#       ssh:
#         enabled: false
#         username:
#         privateKey: 
#         privateKeyFilepath:
#         passphrase:

# redpanda:
#   # Redpanda Admin API configuration that enables additional features
#   # that are Redpanda specific.
#   adminApi:
#     enabled: false
#     # HTTP urls (e.g. http://localhost:9644) that Console should use
#     # to send admin api requests to.
#     urls: []
#     # Username for basic auth
#     username:
#     # Password for basic auth
#     password:
#     tls:
#       enabled: false
#       caFilepath:
#       certFilepath:
#       keyFilepath:
#       insecureSkipTlsVerify: